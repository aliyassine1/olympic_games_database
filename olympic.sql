-- phpMyAdmin SQL Dump
-- version 5.0.2
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1:3306
-- Generation Time: May 10, 2021 at 08:22 PM
-- Server version: 5.7.31
-- PHP Version: 7.4.9

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `olympicsfinal`
--

-- --------------------------------------------------------

--
-- Stand-in structure for view `active_ath`
-- (See below for the actual view)
--
DROP VIEW IF EXISTS `active_ath`;
CREATE TABLE IF NOT EXISTS `active_ath` (
`FirstName` varchar(25)
,`LastName` varchar(25)
,`Nb of Participations` bigint(21)
);

-- --------------------------------------------------------

--
-- Table structure for table `athlete`
--

DROP TABLE IF EXISTS `athlete`;
CREATE TABLE IF NOT EXISTS `athlete` (
  `ID` varchar(15) NOT NULL,
  `Sex` char(1) DEFAULT NULL,
  `YearOfBirth` int(11) DEFAULT NULL,
  `NOC` char(3) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `NOC` (`NOC`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `athlete`
--

INSERT INTO `athlete` (`ID`, `Sex`, `YearOfBirth`, `NOC`) VALUES
('100430', 'M', 1988, 'BRA'),
('100810', 'M', 1981, 'CUB'),
('10121', 'M', 1984, 'PAR'),
('101488', 'F', 1990, 'USA'),
('101810', 'F', 1980, 'ESP'),
('102321', 'F', 1996, 'ESP'),
('102877', 'F', 1982, 'SUI'),
('10306', 'F', 1980, 'AUS'),
('103686', 'M', 1996, 'GBR'),
('10379', 'M', 1983, 'SWE'),
('103838', 'M', 1981, 'CAN'),
('104358', 'M', 1970, 'UZB'),
('10451', 'F', 1986, 'GER'),
('10459', 'M', 1987, 'AUT'),
('10482', 'F', 1980, 'SWE'),
('10539', 'M', 1971, 'USA'),
('10544', 'F', 1985, 'SWE'),
('10557', 'F', 1983, 'SWE'),
('107830', 'M', 1989, 'SUI'),
('108057', 'M', 1985, 'ITA'),
('10819', 'M', 1970, 'ITA'),
('1085', 'M', 1978, 'RUS'),
('109425', 'M', 1979, 'UKR'),
('109492', 'F', 1977, 'BRA'),
('111467', 'M', 1987, 'IND'),
('112753', 'F', 1980, 'ROU'),
('113352', 'F', 1998, 'RUS'),
('114347', 'F', 1999, 'SRB'),
('11495', 'F', 1980, 'USA'),
('115132', 'F', 1980, 'USA'),
('115287', 'M', 1983, 'POL'),
('11624', 'M', 1970, 'CAN'),
('11671', 'F', 1982, 'USA'),
('116754', 'F', 1987, 'CAN'),
('11799', 'M', 1989, 'ITA'),
('1181', 'F', 1989, 'CAN'),
('118778', 'F', 1986, 'USA'),
('11978', 'F', 1982, 'CAN'),
('120443', 'F', 1983, 'GBR'),
('12083', 'M', 1986, 'CAN'),
('121237', 'F', 1982, 'ESP'),
('121592', 'F', 1986, 'NOR'),
('12170', 'M', 1987, 'USA'),
('12272', 'M', 1977, 'ALG'),
('123357', 'F', 1990, 'GER'),
('123759', 'M', 1970, 'NOR'),
('123934', 'M', 1988, 'CZE'),
('124031', 'M', 1980, 'FRA'),
('1251', 'M', 1988, 'CUB'),
('126096', 'M', 1992, 'UKR'),
('126406', 'M', 1989, 'ITA'),
('126760', 'M', 1975, 'USA'),
('126975', 'F', 1991, 'CRO'),
('128285', 'F', 1984, 'USA'),
('129913', 'F', 1993, 'USA'),
('130336', 'M', 1982, 'INA'),
('130402', 'M', 1996, 'RUS'),
('131862', 'M', 1986, 'USA'),
('131981', 'F', 1988, 'ESP'),
('132811', 'F', 1989, 'RUS'),
('132927', 'F', 1982, 'KAZ'),
('133245', 'F', 1989, 'USA'),
('133869', 'F', 1983, 'RUS'),
('1340', 'F', 1986, 'SWE'),
('134062', 'F', 1979, 'BLR'),
('134692', 'F', 1977, 'BLR'),
('135034', 'M', 1985, 'GER'),
('13755', 'M', 1974, 'ESP'),
('13870', 'F', 1983, 'CAN'),
('13896', 'M', 1988, 'FRA'),
('15005', 'M', 1977, 'CAN'),
('15163', 'F', 1975, 'CAN'),
('15228', 'M', 1976, 'USA'),
('15264', 'M', 1982, 'CAN'),
('15383', 'F', 1977, 'CAN'),
('1587', 'M', 1984, 'TUR'),
('161690', 'M', 1977, 'ALG'),
('16497', 'M', 1977, 'ARG'),
('16499', 'M', 1987, 'RUS'),
('16500', 'M', 1989, 'RUS'),
('16977', 'F', 1981, 'SRB'),
('17038', 'F', 1973, 'USA'),
('17651', 'F', 1988, 'DOM'),
('17686', 'F', 1972, 'CAN'),
('17905', 'F', 1982, 'BRA'),
('17994', 'F', 1986, 'CHN'),
('18029', 'F', 1986, 'GER'),
('19044', 'F', 1981, 'USA'),
('19064', 'F', 1982, 'AUS'),
('19205', 'F', 1997, 'SRB'),
('19289', 'F', 1970, 'CZE'),
('19392', 'M', 1981, 'VEN'),
('19406', 'F', 1995, 'SLO'),
('19708', 'F', 1985, 'TPE'),
('19760', 'F', 1984, 'KOR'),
('19901', 'F', 1991, 'USA'),
('19949', 'F', 1989, 'CAN'),
('20136', 'M', 1985, 'USA'),
('2079', 'M', 1975, 'QAT'),
('21357', 'F', 1970, 'USA'),
('218', 'M', 1973, 'EGY'),
('22', 'F', 1990, 'ROU'),
('22091', 'F', 1980, 'CAN'),
('2221', 'F', 1988, 'AUS'),
('22495', 'M', 1989, 'ARG'),
('22859', 'F', 1977, 'AUS'),
('232235', 'M', 1988, 'ALG'),
('24028', 'F', 1985, 'ESP'),
('24064', 'F', 1990, 'SRB'),
('24344', 'F', 1986, 'USA'),
('2448', 'F', 1984, 'USA'),
('24589', 'M', 1987, 'ARG'),
('24765', 'F', 1998, 'SRB'),
('24767', 'F', 1985, 'SRB'),
('24915', 'F', 1976, 'CHN'),
('24966', 'F', 1998, 'CAN'),
('25317', 'M', 1971, 'UKR'),
('25419', 'F', 1984, 'USA'),
('25484', 'M', 1986, 'RUS'),
('25537', 'M', 1977, 'NOR'),
('2577', 'M', 1974, 'CAN'),
('26134', 'M', 1988, 'FRA'),
('2639', 'M', 1987, 'SWE'),
('26823', 'M', 1974, 'USA'),
('26939', 'F', 1983, 'USA'),
('2734', 'M', 1980, 'BUL'),
('27357', 'F', 1984, 'USA'),
('27488', 'F', 1980, 'BUL'),
('2750', 'F', 1980, 'BRA'),
('28056', 'M', 1986, 'ITA'),
('28146', 'M', 1979, 'MLI'),
('28156', 'M', 1979, 'MLI'),
('28161', 'M', 1974, 'MLI'),
('28272', 'M', 1987, 'CRC'),
('28336', 'F', 1986, 'TTO'),
('28371', 'F', 1989, 'BLR'),
('29282', 'F', 1982, 'ESP'),
('29619', 'F', 1985, 'CZE'),
('2965', 'F', 1972, 'SWE'),
('30061', 'M', 1981, 'ITA'),
('30129', 'M', 1977, 'USA'),
('30526', 'M', 1979, 'LAT'),
('30527', 'M', 1987, 'LAT'),
('30592', 'F', 1983, 'CAN'),
('3093', 'M', 1986, 'GER'),
('31279', 'F', 1981, 'SUI'),
('31441', 'F', 1989, 'USA'),
('3154', 'M', 1981, 'CUB'),
('32225', 'M', 1997, 'FIJ'),
('32384', 'M', 1993, 'USA'),
('32468', 'M', 1989, 'BRA'),
('3267', 'F', 1996, 'PAN'),
('32849', 'F', 1983, 'GER'),
('3326', 'F', 1983, 'NGR'),
('3381', 'M', 1986, 'SUI'),
('3393', 'F', 1976, 'NGR'),
('34163', 'F', 1992, 'USA'),
('34788', 'M', 1992, 'ESP'),
('3491', 'M', 1984, 'USA'),
('35958', 'F', 1974, 'USA'),
('3633', 'F', 1989, 'RUS'),
('36558', 'F', 1989, 'USA'),
('36755', 'F', 1995, 'AUT'),
('3676', 'M', 1988, 'SUI'),
('37014', 'F', 1989, 'SUI'),
('3746', 'M', 1970, 'NOR'),
('3823', 'F', 1992, 'USA'),
('3889', 'F', 1975, 'SWE'),
('3909', 'F', 1988, 'SWE'),
('3920', 'F', 1980, 'SWE'),
('3955', 'F', 1971, 'SWE'),
('396', 'F', 1984, 'GER'),
('4014', 'F', 1984, 'JPN'),
('40243', 'F', 1980, 'ESP'),
('4101', 'F', 1980, 'BRA'),
('41427', 'F', 1983, 'CHN'),
('42043', 'F', 1983, 'CAN'),
('4283', 'F', 1975, 'INA'),
('42994', 'F', 1998, 'USA'),
('43026', 'M', 1975, 'BLR'),
('4310', 'F', 1981, 'NOR'),
('432', 'M', 1974, 'CIV'),
('43659', 'M', 1986, 'AUT'),
('43865', 'M', 1987, 'INA'),
('4409', 'M', 1985, 'LAT'),
('4423', 'M', 1979, 'SUI'),
('44426', 'M', 1988, 'KOR'),
('4478', 'F', 1984, 'CAN'),
('44976', 'M', 1971, 'GER'),
('455', 'M', 1997, 'RUS'),
('4554', 'M', 1986, 'BLR'),
('4578', 'M', 1985, 'UKR'),
('46195', 'M', 1981, 'GBR'),
('462019', 'M', 2000, 'LBN'),
('47140', 'M', 1972, 'SUI'),
('4742', 'F', 1982, 'CAN'),
('47578', 'M', 1980, 'USA'),
('4797', 'F', 1977, 'JPN'),
('48194', 'F', 1984, 'GER'),
('48325', 'M', 1971, 'SUI'),
('48761', 'M', 1984, 'JPN'),
('48769', 'M', 1986, 'JPN'),
('48967', 'F', 1979, 'AUS'),
('4913', 'M', 1997, 'NZL'),
('4921', 'M', 1975, 'GBR'),
('49403', 'F', 1985, 'CAN'),
('49645', 'F', 1989, 'GER'),
('5037', 'M', 1972, 'LAT'),
('5045', 'M', 1982, 'CUB'),
('5056', 'M', 1980, 'TUR'),
('50594', 'M', 1989, 'CHN'),
('50695', 'F', 1981, 'GER'),
('51', 'M', 1993, 'ESP'),
('5144', 'F', 1983, 'GBR'),
('5167', 'F', 1987, 'USA'),
('51727', 'M', 1984, 'EGY'),
('5198', 'F', 1983, 'GER'),
('52994', 'F', 1987, 'ROU'),
('5451', 'F', 1991, 'JPN'),
('55457', 'F', 1982, 'USA'),
('56046', 'F', 1980, 'SRB'),
('56409', 'M', 1997, 'CZE'),
('5670', 'M', 1992, 'ITA'),
('57479', 'M', 1996, 'ARM'),
('57803', 'M', 1994, 'JPN'),
('5792', 'M', 1991, 'CYP'),
('5885', 'F', 1996, 'HKG'),
('59376', 'M', 1981, 'GEO'),
('5948', 'M', 1998, 'FRA'),
('59520', 'F', 1989, 'KOR'),
('5971', 'F', 1988, 'USA'),
('59848', 'M', 1973, 'KOR'),
('60110', 'F', 1998, 'PRK'),
('60179', 'F', 1981, 'KOR'),
('60274', 'F', 1977, 'KOR'),
('60372', 'F', 1983, 'KOR'),
('6131', 'M', 1997, 'ITA'),
('6158', 'M', 1984, 'JPN'),
('61583', 'F', 1972, 'GBR'),
('61686', 'M', 1980, 'SUI'),
('6178', 'M', 1973, 'SWE'),
('6201', 'M', 1986, 'ARG'),
('627', 'F', 1979, 'ROU'),
('63125', 'F', 1987, 'ITA'),
('6322', 'F', 1987, 'KAZ'),
('63232', 'M', 1999, 'USA'),
('63262', 'M', 1985, 'CIV'),
('6417', 'F', 1983, 'UKR'),
('64194', 'F', 1999, 'SRB'),
('64487', 'M', 1987, 'KOR'),
('64918', 'F', 1998, 'IND'),
('64936', 'F', 1999, 'SUI'),
('6554', 'M', 1993, 'GER'),
('6561', 'F', 1981, 'GER'),
('66180', 'F', 1996, 'NZL'),
('66446', 'M', 1979, 'GER'),
('66936', 'M', 1980, 'URU'),
('67281', 'F', 1970, 'CAN'),
('68149', 'M', 1998, 'KOR'),
('6841', 'F', 1983, 'USA'),
('6887', 'F', 1974, 'USA'),
('69285', 'M', 1996, 'USA'),
('7022', 'F', 1984, 'USA'),
('7068', 'F', 1980, 'USA'),
('70711', 'F', 1973, 'USA'),
('71921', 'M', 1981, 'CHN'),
('72', 'M', 1977, 'BLR'),
('7217', 'M', 1982, 'ITA'),
('72870', 'F', 1977, 'GBR'),
('737', 'F', 1970, 'USA'),
('73977', 'M', 1989, 'VEN'),
('7431', 'F', 1971, 'SUI'),
('74652', 'M', 1999, 'RSA'),
('75588', 'M', 1979, 'CAN'),
('75628', 'F', 1984, 'GBR'),
('76243', 'M', 1991, 'CUB'),
('76319', 'M', 1982, 'ESP'),
('76947', 'F', 1975, 'USA'),
('77394', 'F', 1992, 'USA'),
('77930', 'F', 1970, 'USA'),
('7835', 'M', 1989, 'PAR'),
('78716', 'F', 1988, 'CHN'),
('80039', 'F', 1995, 'SRB'),
('8050', 'M', 1987, 'USA'),
('8081', 'M', 1983, 'PAR'),
('8082', 'M', 1989, 'PAR'),
('81671', 'F', 1999, 'USA'),
('81972', 'F', 1973, 'ESP'),
('82357', 'F', 1986, 'GBR'),
('8264', 'M', 1972, 'ROU'),
('8295', 'M', 1977, 'CAN'),
('83128', 'M', 1998, 'GER'),
('83715', 'F', 1986, 'RUS'),
('83735', 'F', 1986, 'ROU'),
('84943', 'F', 1986, 'ESP'),
('85190', 'F', 1986, 'CAN'),
('85328', 'M', 1989, 'NOR'),
('85808', 'F', 1988, 'ESP'),
('86690', 'F', 1981, 'CAN'),
('89990', 'F', 1977, 'SUI'),
('9028', 'M', 1976, 'CAN'),
('90442', 'M', 1980, 'USA'),
('90547', 'F', 1995, 'SRB'),
('9071', 'M', 1989, 'CAN'),
('90729', 'F', 1993, 'ESP'),
('9142', 'F', 1988, 'CAN'),
('91878', 'F', 1988, 'ESP'),
('92710', 'M', 1984, 'CUB'),
('9312', 'F', 1986, 'SLO'),
('9371', 'M', 1989, 'AUS'),
('9372', 'M', 1983, 'AUS'),
('9394', 'F', 1976, 'BRA'),
('94165', 'F', 1992, 'SRB'),
('9464', 'F', 1983, 'ESP'),
('95071', 'M', 1986, 'ITA'),
('95153', 'M', 1986, 'ITA'),
('95601', 'M', 1982, 'SUI'),
('96044', 'F', 1997, 'ROU'),
('96910', 'M', 1982, 'SLO'),
('97149', 'F', 1980, 'GER'),
('97884', 'F', 1993, 'ESP'),
('98178', 'F', 1984, 'SRB'),
('9829', 'M', 1986, 'RUS'),
('98437', 'F', 1986, 'USA'),
('98495', 'M', 1994, 'KAZ'),
('9868', 'F', 1983, 'TUN'),
('98778', 'M', 1977, 'NOR'),
('98876', 'F', 1971, 'GBR'),
('99641', 'M', 1980, 'SUI'),
('9980', 'M', 1971, 'SVK'),
('U29876', 'M', 1996, 'PER'),
('U32345', 'M', 1998, 'TUR'),
('U67499', 'F', 1999, 'JPN'),
('U73572', 'M', 1993, 'SYR'),
('U74633', 'M', 1992, 'ARG'),
('U78346', 'F', 1998, 'URU'),
('U95665', 'M', 1994, 'ESA');

-- --------------------------------------------------------

--
-- Stand-in structure for view `ath_info`
-- (See below for the actual view)
--
DROP VIEW IF EXISTS `ath_info`;
CREATE TABLE IF NOT EXISTS `ath_info` (
`ID` varchar(10)
,`FirstName` varchar(25)
,`LastName` varchar(25)
,`NOC` char(3)
,`TeamName` varchar(50)
,`Sex` char(1)
,`YearOfBirth` int(11)
,`Weight` int(11)
,`Height` int(11)
);

-- --------------------------------------------------------

--
-- Stand-in structure for view `ath_winners`
-- (See below for the actual view)
--
DROP VIEW IF EXISTS `ath_winners`;
CREATE TABLE IF NOT EXISTS `ath_winners` (
`FirstName` varchar(25)
,`LastName` varchar(25)
,`NOC` char(3)
,`EventName` varchar(70)
,`OlympicYear` int(11)
,`Medal` varchar(8)
);

-- --------------------------------------------------------

--
-- Table structure for table `events`
--

DROP TABLE IF EXISTS `events`;
CREATE TABLE IF NOT EXISTS `events` (
  `EventID` int(11) NOT NULL,
  `OlympicYear` int(11) NOT NULL,
  `EventName` varchar(70) DEFAULT NULL,
  `SportID` int(11) DEFAULT NULL,
  PRIMARY KEY (`EventID`),
  KEY `OlympicYear` (`OlympicYear`) USING BTREE,
  KEY `SportID` (`SportID`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `events`
--

INSERT INTO `events` (`EventID`, `OlympicYear`, `EventName`, `SportID`) VALUES
(101, 2016, 'Weightlifting Women\'s Super-Heavyweight', 43),
(102, 2016, 'Weightlifting Men\'s Middleweight', 43),
(103, 2016, 'Archery Men\'s Individual', 2),
(104, 2016, 'Archery Women\'s Individual', 2),
(105, 2016, 'Athletics Men\'s Long Jump', 5),
(106, 2016, 'Athletics Women\'s High Jump', 5),
(107, 2016, 'Basketball Women\'s Basketball', 8),
(108, 2016, 'Gymnastics Women\'s Floor Exercise', 3),
(109, 2016, 'Gymnastics Men\'s Parallel Bars', 3),
(110, 2014, 'Figure Skating Women\'s Singles', 50),
(111, 2014, 'Ski Jumping Men\'s Large Hill, Individual', 57),
(112, 2014, 'Snowboarding Men\'s Halfpipe', 58),
(113, 2014, 'Snowboarding Women\'s Halfpipe', 58),
(114, 2014, 'Snowboarding Men\'s Slopestyle', 58),
(115, 2014, 'Snowboarding Women\'s Slopestyle', 58),
(116, 2014, 'Snowboarding Women\'s Parallel Giant Slalom', 58),
(117, 2014, 'Snowboarding Men\'s Parallel Giant Slalom', 58),
(118, 2012, 'Gymnastics Women\'s Floor Exercise', 3),
(119, 2012, 'Gymnastics Men\'s Team All-Around', 3),
(120, 2012, 'Gymnastics Men\'s Floor Exercise', 3),
(121, 2012, 'Gymnastics Men\'s Horse Vault', 3),
(122, 2012, 'Gymnastics Men\'s Parallel Bars', 3),
(123, 2012, 'Cycling Men\'s Omnium', 26),
(124, 2012, 'Cycling Women\'s Road Race, Individual', 26),
(125, 2012, 'Cycling Women\'s Individual Time Trial', 26),
(126, 2012, 'Cycling Women\'s Team Pursuit', 26),
(127, 2012, 'Cycling Men\'s Mountainbike, Cross-Country', 26),
(128, 2012, 'Fencing Men\'s Foil, Team', 15),
(129, 2012, 'Fencing Women\'s Sabre, Individual', 15),
(130, 2012, 'Fencing Men\'s Foil, Individual', 15),
(131, 2012, 'Fencing Men\'s Sabre, Individual', 15),
(132, 2010, 'Ice Hockey Men\'s Ice Hockey', 19),
(133, 2010, 'Ice Hockey Women\'s Ice Hockey', 19),
(134, 2010, 'Skeleton Men\'s Skeleton', 56),
(135, 2010, 'Skeleton Women\'s Skeleton', 56),
(136, 2008, 'Gymnastics Women\'s Floor Exercise', 3),
(137, 2008, 'Canoeing Men\'s Kayak Fours, 1,000 metres', 27),
(138, 2008, 'Canoeing Men\'s Kayak Singles, 500 metres', 27),
(139, 2008, 'Canoeing Men\'s Kayak Singles, 1,000 metres', 27),
(140, 2008, 'Canoeing Men\'s Canadian Doubles, 500 metres', 27),
(141, 2008, 'Canoeing Men\'s Canadian Doubles, 1,000 metres', 27),
(142, 2008, 'Canoeing Men\'s Kayak Fours, 1,000 metres', 27),
(143, 2008, 'Equestrianism Mixed Jumping, Individual', 14),
(144, 2008, 'Equestrianism Mixed Dressage, Team', 14),
(145, 2008, 'Equestrianism Mixed Dressage, Individual', 14),
(146, 2006, 'Bobsleigh Men\'s Four', 47),
(147, 2006, 'Bobsleigh Men\'s Two', 47),
(148, 2006, 'Bobsleigh Women\'s Two', 47),
(149, 2006, 'Freestyle Skiing Men\'s Aerials', 51),
(150, 2006, 'Freestyle Skiing Women\'s Moguls', 51),
(151, 2006, 'Freestyle Skiing Men\'s Moguls', 51),
(152, 2004, 'Beach Volleyball Women\'s Beach Volleyball', 9),
(153, 2004, 'Beach Volleyball Men\'s Beach Volleyball', 9),
(154, 2004, 'Football Men\'s Football', 16),
(155, 2004, 'Football Women\'s Football', 16),
(156, 2004, 'Gymnastics Women\'s Floor Exercise', 3),
(157, 2002, 'Curling Men\'s Curling', 49),
(158, 2002, 'Curling Women\'s Curling', 49),
(159, 2002, 'Bobsleigh Men\'s Two', 47),
(160, 2002, 'Bobsleigh Women\'s Two', 47),
(161, 2002, 'Freestyle Skiing Men\'s Aerials', 51),
(162, 2002, 'Freestyle Skiing Women\'s Moguls', 51),
(163, 2002, 'Ice Hockey Men\'s Ice Hockey', 52),
(164, 2002, 'Ice Hockey Women\'s Ice Hockey', 52),
(165, 2000, 'Archery Men\'s Individual', 2),
(166, 2000, 'Archery Men\'s Team', 2),
(167, 2000, 'Archery Women\'s Individual', 2),
(168, 2000, 'Athletics Men\'s Long Jump', 5),
(169, 2000, 'Athletics Women\'s High Jump', 5),
(170, 2000, 'Badminton Men\'s Doubles', 6),
(171, 2000, 'Badminton Women\'s Singles', 6),
(172, 2000, 'Boxing Men\'s Bantamweight', 12),
(173, 2000, 'Boxing Men\'s Super-Heavyweight', 12),
(174, 2000, 'Gymnastics Women\'s Floor Exercise', 3);

-- --------------------------------------------------------

--
-- Table structure for table `hostcountry`
--

DROP TABLE IF EXISTS `hostcountry`;
CREATE TABLE IF NOT EXISTS `hostcountry` (
  `CountryID` varchar(2) NOT NULL,
  `CountryName` varchar(70) DEFAULT NULL,
  PRIMARY KEY (`CountryID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `hostcountry`
--

INSERT INTO `hostcountry` (`CountryID`, `CountryName`) VALUES
('A1', 'Australia'),
('B1', 'Brazil'),
('C1', 'Canada'),
('C2', 'China'),
('E1', 'England'),
('F1', 'France'),
('G1', 'Greece'),
('I1', 'Italy'),
('R1', 'Russian Federation'),
('U1', 'United States');

-- --------------------------------------------------------

--
-- Table structure for table `login`
--

DROP TABLE IF EXISTS `login`;
CREATE TABLE IF NOT EXISTS `login` (
  `username` varchar(50) NOT NULL,
  `password` varchar(50) NOT NULL,
  PRIMARY KEY (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `login`
--

INSERT INTO `login` (`username`, `password`) VALUES
('', ''),
('maya', 'ali'),
('reem', '123');

-- --------------------------------------------------------

--
-- Table structure for table `olympics`
--

DROP TABLE IF EXISTS `olympics`;
CREATE TABLE IF NOT EXISTS `olympics` (
  `Year` int(11) NOT NULL,
  `Season` varchar(7) DEFAULT NULL,
  `City` varchar(40) DEFAULT NULL,
  `StartDate` date DEFAULT NULL,
  `EndDate` date DEFAULT NULL,
  `CountryID` varchar(2) DEFAULT NULL,
  PRIMARY KEY (`Year`),
  KEY `CountryID` (`CountryID`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `olympics`
--

INSERT INTO `olympics` (`Year`, `Season`, `City`, `StartDate`, `EndDate`, `CountryID`) VALUES
(2000, 'Summer', 'Sydney', '2000-09-15', '2000-01-10', 'A1'),
(2002, 'Winter', 'Salt Lake City', '2002-02-08', '2002-02-24', 'U1'),
(2004, 'Summer', 'Athens', '2004-08-13', '2004-08-29', 'G1'),
(2006, 'Winter', 'Turin', '2006-02-10', '2006-02-26', 'I1'),
(2008, 'Summer', 'Beijing', '2008-08-08', '2008-08-24', 'C2'),
(2010, 'Winter', 'Vancouver', '2010-02-12', '2010-02-28', 'C1'),
(2012, 'Summer', 'London', '2012-07-27', '2012-08-12', 'E1'),
(2014, 'Winter', 'Sochi', '2014-02-07', '2014-02-23', 'R1'),
(2016, 'Summer', 'Rio', '2016-08-05', '2016-08-21', 'B1');

-- --------------------------------------------------------

--
-- Stand-in structure for view `olympics_info`
-- (See below for the actual view)
--
DROP VIEW IF EXISTS `olympics_info`;
CREATE TABLE IF NOT EXISTS `olympics_info` (
`City` varchar(40)
,`CountryName` varchar(70)
,`Year` int(11)
,`Season` varchar(7)
,`StartDate` date
,`EndDate` date
);

-- --------------------------------------------------------

--
-- Table structure for table `participatesin`
--

DROP TABLE IF EXISTS `participatesin`;
CREATE TABLE IF NOT EXISTS `participatesin` (
  `AthleteID` varchar(10) NOT NULL,
  `EventID` int(11) NOT NULL,
  PRIMARY KEY (`AthleteID`,`EventID`),
  KEY `EventID` (`EventID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `participatesin`
--

INSERT INTO `participatesin` (`AthleteID`, `EventID`) VALUES
('101488', 101),
('22', 101),
('60110', 101),
('66180', 101),
('78716', 101),
('111467', 102),
('51727', 102),
('57479', 102),
('71921', 102),
('76319', 102),
('83128', 102),
('98495', 102),
('124031', 103),
('32225', 103),
('32384', 103),
('34788', 103),
('63262', 103),
('64487', 103),
('68149', 103),
('73977', 103),
('123357', 104),
('17651', 104),
('17905', 104),
('17994', 104),
('19760', 104),
('59520', 104),
('64918', 104),
('103686', 105),
('47578', 105),
('50594', 105),
('56409', 105),
('59376', 105),
('66936', 105),
('74652', 105),
('76243', 105),
('126975', 106),
('19406', 106),
('24344', 106),
('27488', 106),
('3326', 106),
('4310', 106),
('9464', 106),
('101810', 107),
('102321', 107),
('114347', 107),
('115132', 107),
('11671', 107),
('118778', 107),
('121237', 107),
('129913', 107),
('131981', 107),
('16977', 107),
('19044', 107),
('19205', 107),
('19901', 107),
('24028', 107),
('24064', 107),
('24765', 107),
('24767', 107),
('27357', 107),
('29282', 107),
('36558', 107),
('40243', 107),
('42994', 107),
('56046', 107),
('5971', 107),
('64194', 107),
('77394', 107),
('80039', 107),
('81671', 107),
('84943', 107),
('85808', 107),
('90547', 107),
('90729', 107),
('91878', 107),
('94165', 107),
('97884', 107),
('98178', 107),
('11495', 108),
('120443', 108),
('28336', 108),
('28371', 108),
('3267', 108),
('98437', 108),
('126096', 109),
('5056', 109),
('51', 109),
('5948', 109),
('69285', 109),
('9829', 109),
('113352', 110),
('24966', 110),
('31441', 110),
('36755', 110),
('5451', 110),
('60372', 110),
('63125', 110),
('115287', 111),
('57803', 111),
('96910', 111),
('48761', 112),
('48769', 112),
('95601', 112),
('34163', 113),
('63232', 114),
('3823', 115),
('64936', 116),
('130402', 117),
('10451', 118),
('11978', 118),
('6322', 118),
('83715', 118),
('96044', 118),
('98437', 118),
('455', 119),
('455', 120),
('455', 121),
('455', 122),
('4913', 123),
('5144', 124),
('5167', 124),
('5198', 124),
('5144', 125),
('5167', 125),
('5198', 125),
('5198', 126),
('5792', 127),
('5670', 128),
('6131', 128),
('6158', 128),
('6554', 128),
('7217', 128),
('5885', 129),
('9868', 129),
('6554', 130),
('7217', 130),
('9071', 131),
('1085', 132),
('2639', 132),
('3381', 132),
('3746', 132),
('4409', 132),
('4554', 132),
('1181', 133),
('3633', 133),
('3909', 133),
('3920', 133),
('4742', 133),
('30061', 134),
('30526', 134),
('30527', 134),
('43659', 134),
('44976', 134),
('42043', 135),
('48967', 135),
('49403', 135),
('50695', 135),
('396', 136),
('52994', 136),
('55457', 136),
('627', 136),
('70711', 136),
('72', 137),
('432', 138),
('432', 139),
('1251', 140),
('2734', 140),
('1251', 141),
('2734', 141),
('3093', 142),
('15383', 144),
('18029', 144),
('18029', 145),
('10819', 146),
('2577', 146),
('4423', 146),
('5037', 146),
('9980', 146),
('10819', 147),
('4423', 147),
('8264', 147),
('7431', 148),
('10539', 149),
('9028', 149),
('10306', 150),
('9312', 150),
('9371', 151),
('9372', 151),
('109492', 152),
('128285', 152),
('133245', 152),
('19289', 152),
('22859', 152),
('29619', 152),
('30592', 152),
('76947', 152),
('77930', 152),
('9394', 152),
('100430', 153),
('10379', 153),
('10459', 153),
('12170', 153),
('13755', 153),
('3154', 153),
('32468', 153),
('48325', 153),
('61686', 153),
('10121', 154),
('108057', 154),
('16497', 154),
('22495', 154),
('24589', 154),
('28146', 154),
('28156', 154),
('28161', 154),
('28272', 154),
('6201', 154),
('7835', 154),
('8081', 154),
('8082', 154),
('95071', 154),
('95153', 154),
('2221', 155),
('2750', 155),
('3393', 155),
('3955', 155),
('4014', 155),
('4101', 155),
('4797', 155),
('6561', 155),
('112753', 156),
('81972', 156),
('96044', 156),
('103838', 157),
('107830', 157),
('123759', 157),
('25537', 157),
('75588', 157),
('8295', 157),
('85328', 157),
('98778', 157),
('102877', 158),
('116754', 158),
('31279', 158),
('37014', 158),
('61583', 158),
('67281', 158),
('72870', 158),
('75628', 158),
('82357', 158),
('85190', 158),
('86690', 158),
('89990', 158),
('98876', 158),
('135034', 159),
('3676', 159),
('4423', 159),
('47140', 159),
('66446', 159),
('99641', 159),
('32849', 160),
('35958', 160),
('48194', 160),
('49645', 160),
('7068', 160),
('97149', 160),
('123934', 161),
('43026', 161),
('90442', 161),
('121592', 162),
('6841', 162),
('1085', 163),
('12083', 163),
('15005', 163),
('15264', 163),
('16499', 163),
('16500', 163),
('20136', 163),
('25484', 163),
('26823', 163),
('30129', 163),
('3491', 163),
('8050', 163),
('10482', 164),
('10557', 164),
('1340', 164),
('13870', 164),
('15163', 164),
('17038', 164),
('17686', 164),
('19949', 164),
('21357', 164),
('25419', 164),
('26939', 164),
('2965', 164),
('3889', 164),
('3920', 164),
('4478', 164),
('6887', 164),
('7022', 164),
('9142', 164),
('131862', 165),
('1587', 165),
('4578', 165),
('5045', 165),
('11799', 166),
('26134', 166),
('28056', 166),
('60179', 167),
('60274', 167),
('109425', 168),
('2079', 168),
('92710', 168),
('10544', 169),
('132811', 169),
('2448', 169),
('6417', 169),
('737', 169),
('83735', 169),
('130336', 170),
('43865', 170),
('44426', 170),
('4921', 170),
('59848', 170),
('6178', 170),
('19064', 171),
('19708', 171),
('22091', 171),
('24915', 171),
('41427', 171),
('4283', 171),
('100810', 172),
('12272', 172),
('126760', 172),
('13896', 172),
('19392', 172),
('25317', 172),
('104358', 173),
('11624', 173),
('126406', 173),
('15228', 173),
('218', 173),
('46195', 173),
('132927', 174),
('133869', 174),
('134062', 174),
('134692', 174);

-- --------------------------------------------------------

--
-- Table structure for table `person`
--

DROP TABLE IF EXISTS `person`;
CREATE TABLE IF NOT EXISTS `person` (
  `ID` varchar(10) NOT NULL,
  `FirstName` varchar(25) NOT NULL,
  `LastName` varchar(25) NOT NULL,
  PRIMARY KEY (`ID`),
  KEY `IND_FN` (`FirstName`),
  KEY `IND_LN` (`LastName`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `person`
--

INSERT INTO `person` (`ID`, `FirstName`, `LastName`) VALUES
('0', 'Maya', 'Awada'),
('100430', 'Ricardo', 'Santos'),
('100810', 'Guillermo', 'Ortz'),
('10085', 'Rolf-Gran', 'Bengtsson'),
('10121', 'Pedro', 'Domnguez'),
('101488', 'Sarah Elizabeth', 'Robles'),
('101810', 'Leonor', 'Manso'),
('102321', 'Leticia', 'Gonzlez'),
('102877', 'Nadia', 'Rthlisberger'),
('10306', 'Manuela', 'Berchtold'),
('103686', 'Gregory James', 'Rutherford'),
('10379', 'Karl', 'Berg'),
('103838', 'Carter', 'Rycroft'),
('104358', 'Rustam', 'Saidov'),
('10451', 'Janine', 'Berger'),
('10459', 'Nikolas', 'Berger'),
('10482', 'Emelie', 'Berggren'),
('10539', 'Eric', 'Bergoust'),
('10544', 'Kajsa', 'Bergqvist'),
('10557', 'Margit', 'Bergstrand'),
('106062', 'Tae', 'Satoya'),
('1071', 'Kseniya', 'Afanasyeva'),
('10767', 'Ingrid', 'Berntsen'),
('107828', 'Andreas', 'Schwaller'),
('107830', 'Christof', 'Schwaller'),
('108057', 'Giuseppe', 'Sculli'),
('10819', 'Simone', 'Bertazzo'),
('1085', 'Maksim', 'Afinogenov'),
('109425', 'Roman', 'Shchurenko'),
('109492', 'Shelda', 'Bede'),
('111183', 'Othman', 'Ibrahim'),
('111467', 'Sathish Kumar', 'Sivalingam'),
('112753', 'Nicoleta', 'ofronie'),
('113352', 'Adelina', 'Sotnikova'),
('114347', 'Dragana', 'Stankovi'),
('11495', 'Simone Arianne', 'Biles'),
('115132', 'Breanna Mackenzie', 'Stewart'),
('115287', 'Kamil', 'Stoch'),
('11624', 'Artur', 'Binkowski'),
('11671', 'Suzanne', 'Bird'),
('116754', 'Julie', 'Sutton-Skinner'),
('11799', 'Matteo', 'Bisiani'),
('1181', 'Meghan', 'Agosta'),
('118778', 'Diana Lurena', 'Taurasi'),
('11978', 'Elsabeth', 'Black'),
('120443', 'Amy', 'Tinkler'),
('12083', 'Robert', 'Blake'),
('121237', 'Alba', 'Salom'),
('121592', 'Kari', 'Traa'),
('12170', 'Dain', 'Blanton'),
('122115', 'Pl', 'Trulsen'),
('122434', 'Hussein', 'Ahmad'),
('12272', 'Hichem', 'Blida'),
('123357', 'Lisa', 'Unruh'),
('123759', 'Lars', 'Vgberg'),
('123934', 'Ale', 'Valenta'),
('124031', 'Jean-Charles', 'Valladont'),
('1251', 'Karel', 'Chacn'),
('126096', 'Oleh', 'Verniaiev'),
('126406', 'Paolo', 'Vidoz'),
('126760', 'Clarence', 'Vinson'),
('126975', 'Blanka', 'Vlai'),
('128285', 'Kerri', 'Jennings'),
('129913', 'Lindsay Marie', 'Whalen'),
('130336', 'Candra', 'Wijaya'),
('130402', 'Victor Ivan', 'Wild'),
('131862', 'Victor', 'Wunderle'),
('131981', 'Marta', 'Casademont'),
('132745', 'Ye', 'Zhaoying'),
('132811', 'Yelena', 'Yelesina'),
('132927', 'Irina', 'Yevdokimova'),
('133245', 'Elaine', 'Youngs'),
('133869', 'Yelena', 'Zamolodchikova'),
('1340', 'Annica', 'hln'),
('134062', 'Marina', 'Zarzhitskaya'),
('134692', 'Tatyana', 'Zharganova'),
('135034', 'Markus', 'Zimmermann'),
('13755', 'Francisco', 'Mnguez'),
('13870', 'Jennifer', 'Botterill'),
('13896', 'Rachid', 'Bouaita'),
('15005', 'Eric', 'Brewer'),
('15163', 'Thrse', 'Brisson'),
('15228', 'Calvin', 'Brock'),
('15264', 'Martin', 'Brodeur'),
('15383', 'Jacqueline', 'Brooks'),
('1587', 'zdemir', 'Akbal'),
('161690', 'Ahmad', 'Ahmad'),
('16497', 'Nicols', 'Burdisso'),
('16499', 'Pavel', 'Bure'),
('16500', 'Valery', 'Bure'),
('16977', 'Dajana', 'Butulija'),
('17038', 'Karyn', 'Bye'),
('17651', 'Yssica Camilo', 'Gonzlez'),
('17686', 'Cassie', 'Campbell'),
('17905', 'Marina Canetta', 'Gobbi'),
('17994', 'Cao', 'Hui'),
('18029', 'Nadine', 'Capellman'),
('19044', 'Tamika', 'Catchings'),
('19064', 'Rhonda', 'Cator'),
('19205', 'Saa', 'Ao'),
('19289', 'Eva', 'Celbov'),
('19392', 'Nehomar', 'Cermeo'),
('19406', 'Marua', 'Ernjul'),
('19708', 'Chan', 'Ya-Lin'),
('19760', 'Chang', 'Hye-Jin'),
('19901', 'Tina Alexandria', 'Charles'),
('19949', 'Isabelle', 'Chartrand'),
('20136', 'Christos', 'Chelios'),
('2079', 'Abdul_Rahman', 'Faraj'),
('21357', 'Julie', 'Chu'),
('218', 'Ahmed', 'Samad'),
('22', 'Andreea', 'Aanei'),
('22091', 'Milaine', 'Cloutier'),
('2221', 'Dianne', 'Alagich'),
('22495', 'Fabricio', 'Coloccini'),
('22859', 'Natalie', 'Cook'),
('232235', 'Hussein', 'Ahmad'),
('24028', 'Anna Cruz', 'Lebrato'),
('24064', 'Aleksandra', 'Crvendaki'),
('24344', 'Vashti', 'Cunningham'),
('2448', 'Erin', 'Aldrich'),
('24589', 'Andrs', 'D\'Alessandro'),
('24765', 'Ana', 'Dabovi'),
('24767', 'Milica', 'Dabovi'),
('24915', 'Dai', 'Yun'),
('24966', 'Gabrielle', 'Daleman'),
('25317', 'Serhiy', 'Danylchenko'),
('25419', 'Natalie', 'Darwitz'),
('254805', 'Maya', 'Awada'),
('25484', 'Pavel', 'Datsyuk'),
('25537', 'Flemming', 'Davanger'),
('2577', 'Morgan', 'Alexander'),
('259525', 'Ali', 'Yassine'),
('26134', 'Jocelyn', 'Grandis'),
('2639', 'Hans', 'Alfredsson'),
('26823', 'Adam', 'Deadmarsh'),
('26939', 'Sara', 'DeCosta'),
('2734', 'Adnan', 'Aliev'),
('27357', 'Elena', 'Donne'),
('27488', 'Mirela', 'Demireva'),
('2750', 'Aline', 'Pellegrino'),
('28056', 'Ilario', 'DiBu'),
('28146', 'Drissa', 'Diakit'),
('28156', 'Boucader', 'Diallo'),
('28161', 'Mamadou', 'Diallo'),
('28272', 'Jnior', 'Campbell'),
('28336', 'Marisa Roseanne', 'Dick'),
('28371', 'Kylie Rei', 'Dickson'),
('29282', 'Slvia', 'Fernndez'),
('29619', 'Soa', 'Dosoudilov-Novkov'),
('2965', 'Annelie', 'Almblad'),
('30061', 'Nicola', 'Drocco'),
('30129', 'Christopher', 'Drury'),
('30526', 'Martins', 'Dukurs'),
('30527', 'Tomass', 'Dukurs'),
('30592', 'Guylaine', 'Dumont'),
('3093', 'Lutz', 'Altepost'),
('31279', 'Luzia', 'Ebnther'),
('31441', 'Polina', 'Edmunds'),
('3154', 'Francisco', 'Cutio'),
('32225', 'Robert', 'Elder'),
('32384', 'Brady Lee', 'Ellison'),
('32468', 'Emanuel', 'Rego'),
('3267', 'Isabella del Carmen', 'Medrano'),
('326952', 'Maya', 'Awada'),
('32849', 'Susi-Lisa', 'Erdmann'),
('332120', 'Abed', 'Abed'),
('3326', 'Eyawomano', 'Amata'),
('3381', 'Andres', 'Ambhl'),
('3393', 'Ajuma', 'Ameh'),
('34163', 'Kaitlyn Brooke', 'Farrington'),
('34788', 'Antonio', 'Fernndez'),
('3491', 'Anthony', 'Amonte'),
('35958', 'Vonetta', 'Flowers'),
('3633', 'Yekaterina', 'Ananina'),
('36558', 'Sylvia Shaqueria', 'Fowles'),
('36755', 'Kerstin', 'Frank'),
('3676', 'Stefan', 'Anderhub'),
('37014', 'Tanya', 'Frei'),
('3746', 'Jonas', 'Andersen'),
('3823', 'Jamie Louise', 'Anderson'),
('3889', 'Anna', 'Andersson'),
('3909', 'Emilia', 'Andersson'),
('3920', 'Gunilla', 'Andersson'),
('3955', 'Malin', 'Andersson'),
('396', 'Katja', 'Abel'),
('4014', 'Kozue', 'Ando'),
('40243', 'Laura', 'Collado'),
('4101', 'Andria', 'Suntaque'),
('41427', 'Gong', 'Zhichao'),
('42043', 'Amy', 'Gough'),
('4283', 'Ellen', 'Angelinawaty'),
('42994', 'Brittney Yevette', 'Griner'),
('43026', 'Aleksey', 'Grishin'),
('4310', 'Tonje', 'Angelsen'),
('432', 'Koutoua', 'Abia'),
('43659', 'Matthias', 'Guggenberger'),
('43865', 'Tony', 'Gunawan'),
('4409', 'irts', 'Ankipns'),
('4423', 'Martin', 'Annen'),
('44426', 'Ha', 'Tae-Gwon'),
('4478', 'Dana', 'Antal'),
('44976', 'Mirsad', 'Halilovic'),
('455', 'Denis', 'Ablyazin'),
('4554', 'Oleg', 'Antonenko'),
('4578', 'Serhiy', 'Antonov'),
('46195', 'Audley', 'Harrison'),
('462019', 'Abed', 'Alamin'),
('47140', 'Beat', 'Hefti'),
('4742', 'Gillian', 'Apps'),
('47578', 'Jeffrey', 'Henderson'),
('4797', 'Eriko', 'Arakawa'),
('48194', 'Nicole', 'Herschmann'),
('48325', 'Patrick', 'Heuscher'),
('48761', 'Ayumu', 'Hirano'),
('48769', 'Taku', 'Hiraoka'),
('48967', 'Melissa', 'Hoar'),
('4913', 'Shane', 'Archbold'),
('4921', 'Simon', 'Archer'),
('49403', 'Mellisa', 'Hollingsworth-Richards'),
('49645', 'Ulrike', 'Holzner'),
('5037', 'Mihails', 'Arhipovs'),
('5045', 'Ismely', 'Castillo'),
('5056', 'Ferhat', 'Arcan'),
('50594', 'Huang', 'Changzhou'),
('50695', 'Anja', 'Huber'),
('51', 'Nstor Abad', 'Sanjun'),
('5144', 'Elizabeth', 'Armitstead'),
('5167', 'Kristin', 'Armstrong'),
('51727', 'Mohamed Ihab', 'Mahmoud'),
('5198', 'Judith', 'Arndt'),
('52994', 'Sandra', 'Izbaa'),
('5451', 'Mao', 'Asada'),
('55457', 'Shawn', 'Johnson'),
('56046', 'Nevena', 'Jovanovi'),
('56409', 'Radek', 'Juka'),
('5670', 'Valerio', 'Aspromonte'),
('57479', 'Andranik', 'Karapetyan'),
('57803', 'Noriaki', 'Kasai'),
('5792', 'Marios', 'Athanasiadis'),
('584296', 'Maya', 'Awada'),
('5885', 'Au', 'Ying'),
('59376', 'Bachana', 'Khorava'),
('5948', 'Axel Louis', 'Augis'),
('59520', 'Ki', 'Bo-Bae'),
('5971', 'Seimone', 'Augustus'),
('59848', 'Kim', 'Dong-Mun'),
('60110', 'Kim', 'Kuk-Hyang'),
('60179', 'Kim', 'Nam-Sun'),
('60274', 'Kim', 'Su-Nyeong'),
('60372', 'Yu-Na', 'Kim'),
('6131', 'Giorgio', 'Avola'),
('6158', 'Suguru', 'Awaji'),
('61583', 'Deborah', 'Knox'),
('61686', 'Stefan', 'Kobel'),
('6178', 'Hans', 'Axelsson'),
('6201', 'Roberto', 'Ayala'),
('627', 'Andreea', 'Acatrinei'),
('630671', '', ''),
('63125', 'Carolina', 'Kostner'),
('6322', 'Moldir', 'Azimbay'),
('63232', 'Sage', 'Kotsenburg'),
('63262', 'Ren Philippe', 'Kouassi'),
('6417', 'Inha', 'Babakova'),
('64194', 'Sara', 'Krnji'),
('64487', 'Ku', 'Bon-Chan'),
('64918', 'Deepika', 'Kumari'),
('64936', 'Patrizia', 'Kummer'),
('6554', 'Sebastian', 'Bachmann'),
('6561', 'Isabell', 'Bachor'),
('657801', 'Maya', 'Awada'),
('66180', 'Tracey', 'Lambrechs'),
('66446', 'Christoph', 'Langen'),
('66936', 'Emiliano Lasa', 'Snchez'),
('67281', 'Kelley', 'Law'),
('68149', 'Lee', 'Seung-Yun'),
('6841', 'Shannon', 'Bahrke'),
('6887', 'Christina', 'Bailey'),
('69285', 'Danell', 'Gonzalez'),
('7022', 'Laurie', 'Baker'),
('7068', 'Jill', 'Bakken'),
('70711', 'Anastasiya', 'Liukin'),
('711738', 'Maya', 'Awada'),
('71921', 'Lu', 'Xiaojun'),
('72', 'Aleksey', 'Abalmasov'),
('7217', 'Andrea', 'Baldini'),
('72870', 'Fiona', 'MacDonald'),
('737', 'Amelia', 'Acuff'),
('73977', 'Elas Javier', 'Malav Burgos'),
('7431', 'Maya', 'Bamert'),
('74652', 'Luvo', 'Manyonga'),
('75588', 'Kevin', 'Martin'),
('75628', 'Rhona', 'Martin'),
('76243', 'Maykel', 'Bavastro'),
('76319', 'Andrs Eduardo', 'Mata Prez'),
('76947', 'Misty', 'May-Treanor'),
('77394', 'Angel Lajuane', 'McCoughtry'),
('77930', 'Holly', 'McPeak'),
('7835', 'Fredy', 'Gamarra'),
('78716', 'Meng', 'Suping'),
('79238', 'Abed', 'alamin'),
('80039', 'Jelena', 'Milovanovi'),
('8050', 'Thomas', 'Barrasso'),
('8081', 'Diego', 'Cceres'),
('8082', 'dgar', 'Cceres'),
('81671', 'Maya April', 'Moore'),
('81972', 'Patricia', 'Snchez'),
('82357', 'Margaret', 'Morton'),
('8264', 'Levente', 'Bartha'),
('8295', 'Donald', 'Bartlett'),
('83128', 'Nico', 'Mller'),
('83715', 'Aliya', 'Mustafina'),
('83735', 'Oana', 'Muunoi-Pantelimon'),
('84943', 'Astou', 'Gueye'),
('85190', 'Diane', 'Nelson'),
('85328', 'Torger', 'Nergrd'),
('85808', 'Laura', 'Gonzlez'),
('86690', 'Cheryl', 'Noble'),
('872075', 'Maya', 'Awada'),
('881618', 'abed', 'abed'),
('89990', 'Mirjam', 'Ott'),
('9028', 'Jeff', 'Bean'),
('90442', 'Joe', 'Pack'),
('90547', 'Danielle Nicole', 'Page'),
('9071', 'Philippe', 'Beaudry'),
('90729', 'Laia', 'Alts'),
('9142', 'Kelly', 'Bchard'),
('91878', 'Mara Lucila', 'Surez'),
('92710', 'Ivn', 'Soler'),
('9312', 'Nina', 'Bednarik'),
('9371', 'Dale', 'Begg-Smith'),
('9372', 'Jason', 'Begg-Smith'),
('9394', 'Adriana', 'Behar'),
('94165', 'Sonja', 'Petrovi'),
('9464', 'Ruth Beita', 'Vila'),
('95071', 'Giampiero', 'Pinzi'),
('95153', 'Andrea', 'Pirlo'),
('95601', 'Louri', 'Podladtchikov'),
('96044', 'Ctlina', 'Ponor'),
('96910', 'Peter', 'Prevc'),
('97149', 'Sandra', 'Prokoff-Kiriasis'),
('97884', 'Laura', 'Caizares'),
('98178', 'Tamara', 'Radoaj'),
('9829', 'David', 'Belyavsky'),
('98437', 'Alexandra Rose', 'Raisman'),
('98495', 'Nidzhat Aliyevich', 'Rakhimov'),
('9868', 'Amira', 'Chaabane'),
('98778', 'Bent', 'Ramsfjell'),
('98876', 'Janice', 'Rankin'),
('99641', 'Christian', 'Reich'),
('9980', 'Andrej', 'Benda'),
('null', 'Karl', 'Berge'),
('R239', 'Josh', 'McGill'),
('R534', 'Beom Seok', 'Bae'),
('R547', 'Amir', 'Alami'),
('R876', 'Alaia', 'Lopez'),
('R943', 'Ji', 'Chan'),
('R987', 'Lucas', 'Jansen'),
('U29876', 'Roberto', 'Aboino'),
('U32345', 'Srr', 'Acar'),
('U67499', 'Naoki', 'Abe'),
('U73572', 'Tarek', 'Abou Al Dahab'),
('U74633', 'Hugo Ral', 'Aberastegui'),
('U78346', 'Rita', 'Achkina'),
('U95665', 'Elmer', 'Acevedo');

-- --------------------------------------------------------

--
-- Table structure for table `previousathlete`
--

DROP TABLE IF EXISTS `previousathlete`;
CREATE TABLE IF NOT EXISTS `previousathlete` (
  `ID` varchar(10) NOT NULL,
  `Weight` int(11) DEFAULT NULL,
  `Height` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `previousathlete`
--

INSERT INTO `previousathlete` (`ID`, `Weight`, `Height`) VALUES
('100430', 102, 200),
('100810', 54, 166),
('10121', 80, 190),
('101488', 141, 178),
('101810', 72, 180),
('102321', 62, 177),
('102877', 82, 179),
('10306', 58, 164),
('103686', 92, 188),
('10379', 98, 195),
('103838', 68, 180),
('104358', 96, 188),
('10451', 52, 163),
('10459', 92, 199),
('10482', 66, 170),
('10539', 77, 183),
('10544', 59, 175),
('10557', 63, 162),
('107830', 89, 179),
('108057', 78, 180),
('10819', 103, 184),
('1085', 88, 183),
('109425', 82, 188),
('109492', 59, 165),
('111467', 77, 175),
('112753', 37, 146),
('113352', 65, 163),
('114347', 73, 195),
('11495', 47, 143),
('115132', 79, 193),
('115287', 53, 173),
('11624', 91, 185),
('11671', 66, 175),
('116754', 64, 173),
('11799', 85, 184),
('1181', 67, 168),
('118778', 70, 183),
('11978', 56, 155),
('120443', 47, 152),
('12083', 102, 193),
('121237', 80, 195),
('121592', 65, 168),
('12170', 92, 190),
('12272', 54, 172),
('123357', 68, 180),
('123759', 85, 185),
('123934', 75, 179),
('124031', 83, 180),
('1251', 85, 175),
('126096', 55, 161),
('126406', 94, 190),
('126760', 54, 155),
('126975', 71, 193),
('128285', 73, 191),
('129913', 72, 175),
('130336', 67, 173),
('130402', 82, 179),
('131862', 74, 185),
('131981', 71, 180),
('132811', 64, 183),
('132927', 44, 153),
('133245', 66, 183),
('133869', 43, 154),
('1340', 75, 177),
('134062', 46, 156),
('134692', 40, 147),
('135034', 105, 191),
('13755', 86, 190),
('13870', 71, 175),
('13896', 54, 169),
('15005', 100, 191),
('15163', 68, 170),
('15228', 101, 185),
('15264', 95, 188),
('15383', 66, 175),
('1587', 58, 178),
('161690', 78, 177),
('16497', 82, 182),
('16499', 86, 180),
('16500', 84, 176),
('16977', 65, 175),
('17038', 75, 173),
('17651', 73, 168),
('17686', 66, 170),
('17905', 51, 162),
('17994', 70, 175),
('18029', 51, 166),
('19044', 77, 185),
('19064', 65, 167),
('19205', 72, 178),
('19289', 76, 186),
('19392', 54, 168),
('19406', 56, 177),
('19708', 52, 154),
('19760', 50, 158),
('19901', 88, 193),
('19949', 62, 165),
('20136', 86, 185),
('2079', 77, 192),
('21357', 67, 173),
('218', 95, 195),
('22', 125, 170),
('22091', 63, 165),
('2221', 64, 169),
('22495', 79, 182),
('22859', 73, 181),
('232235', 89, 189),
('24028', 60, 176),
('24064', 76, 187),
('24344', 56, 185),
('2448', 62, 186),
('24589', 70, 170),
('24765', 70, 183),
('24767', 63, 173),
('24915', 60, 175),
('24966', 46, 152),
('25317', 54, 162),
('25419', 65, 160),
('25484', 86, 180),
('25537', 68, 183),
('2577', 92, 182),
('26134', 63, 180),
('2639', 92, 182),
('26823', 89, 183),
('26939', 59, 178),
('2734', 85, 182),
('27357', 86, 195),
('27488', 58, 180),
('2750', 71, 180),
('28056', 90, 175),
('28146', 69, 176),
('28156', 77, 180),
('28161', 77, 176),
('28272', 72, 185),
('28336', 47, 153),
('28371', 50, 160),
('29282', 64, 167),
('29619', 76, 186),
('2965', 69, 170),
('30061', 73, 178),
('30129', 86, 178),
('30526', 75, 178),
('30527', 86, 186),
('30592', 71, 176),
('3093', 92, 193),
('31279', 69, 164),
('31441', 43, 165),
('3154', 83, 184),
('32225', 115, 194),
('32384', 86, 181),
('32468', 80, 190),
('3267', 59, 155),
('32849', 80, 187),
('3326', 63, 191),
('3381', 82, 176),
('3393', 60, 165),
('34163', 57, 163),
('34788', 76, 184),
('3491', 91, 183),
('35958', 70, 167),
('3633', 62, 172),
('36558', 90, 198),
('36755', 55, 163),
('3676', 104, 187),
('37014', 59, 166),
('3746', 85, 184),
('3823', 54, 160),
('3889', 63, 169),
('3909', 72, 175),
('3920', 69, 169),
('3955', 64, 171),
('396', 55, 165),
('4014', 57, 164),
('40243', 78, 191),
('4101', 65, 175),
('41427', 52, 163),
('42043', 64, 164),
('4283', 63, 165),
('42994', 94, 203),
('43026', 70, 170),
('4310', 62, 179),
('432', 80, 180),
('43659', 80, 180),
('43865', 80, 173),
('4409', 83, 183),
('4423', 98, 181),
('44426', 87, 187),
('4478', 64, 170),
('44976', 65, 169),
('455', 62, 161),
('4554', 91, 187),
('4578', 92, 185),
('46195', 110, 198),
('462019', 80, 183),
('47140', 110, 183),
('4742', 80, 180),
('47578', 86, 183),
('4797', 57, 166),
('48194', 71, 180),
('48325', 93, 194),
('48761', 50, 160),
('48769', 63, 171),
('48967', 61, 172),
('4913', 79, 182),
('4921', 86, 189),
('49403', 58, 167),
('49645', 68, 181),
('5037', 95, 183),
('5045', 63, 170),
('5056', 68, 178),
('50594', 73, 186),
('50695', 60, 172),
('51', 64, 167),
('5144', 55, 168),
('5167', 58, 173),
('51727', 77, 165),
('5198', 59, 173),
('52994', 52, 164),
('5451', 50, 163),
('55457', 41, 145),
('56046', 72, 179),
('56409', 84, 194),
('5670', 84, 187),
('57479', 77, 180),
('57803', 60, 176),
('5792', 70, 179),
('5885', 66, 167),
('59376', 67, 171),
('5948', 71, 172),
('59520', 57, 167),
('5971', 74, 183),
('59848', 74, 184),
('60110', 100, 170),
('60179', 65, 170),
('60274', 58, 165),
('60372', 47, 165),
('6131', 72, 178),
('6158', 67, 174),
('61583', 66, 167),
('61686', 89, 190),
('6178', 84, 189),
('6201', 75, 177),
('627', 40, 150),
('63125', 60, 169),
('6322', 46, 162),
('63232', 75, 178),
('63262', 83, 190),
('6417', 60, 180),
('64194', 83, 193),
('64487', 84, 181),
('64918', 61, 163),
('64936', 70, 172),
('6554', 71, 182),
('6561', 63, 174),
('66180', 105, 167),
('66446', 98, 188),
('66936', 75, 180),
('67281', 63, 159),
('68149', 80, 174),
('6841', 55, 162),
('6887', 73, 167),
('69285', 68, 170),
('7022', 61, 170),
('7068', 65, 167),
('70711', 45, 160),
('71921', 77, 172),
('72', 83, 180),
('7217', 70, 175),
('72870', 52, 160),
('737', 66, 188),
('73977', 87, 180),
('7431', 81, 182),
('74652', 80, 181),
('75588', 93, 185),
('75628', 71, 167),
('76243', 61, 174),
('76319', 77, 174),
('76947', 72, 175),
('77394', 70, 185),
('77930', 62, 170),
('7835', 77, 179),
('78716', 123, 173),
('80039', 84, 190),
('8050', 95, 190),
('8081', 78, 182),
('8082', 78, 178),
('81671', 79, 183),
('81972', 31, 143),
('82357', 66, 172),
('8264', 80, 185),
('8295', 84, 185),
('83128', 80, 168),
('83715', 48, 162),
('83735', 61, 178),
('84943', 68, 195),
('85190', 59, 163),
('85328', 85, 179),
('85808', 90, 190),
('86690', 57, 168),
('89990', 58, 162),
('9028', 83, 180),
('90442', 84, 175),
('90547', 77, 188),
('9071', 73, 183),
('90729', 69, 181),
('9142', 66, 175),
('91878', 93, 196),
('92710', 66, 176),
('9312', 61, 160),
('9371', 84, 186),
('9372', 79, 186),
('9394', 64, 180),
('94165', 77, 188),
('9464', 72, 191),
('95071', 74, 176),
('95153', 68, 177),
('95601', 76, 184),
('96044', 47, 160),
('96910', 56, 169),
('97149', 80, 182),
('97884', 74, 185),
('98178', 60, 170),
('9829', 55, 165),
('98437', 52, 157),
('98495', 77, 176),
('9868', 61, 175),
('98778', 78, 179),
('98876', 57, 172),
('99641', 93, 178),
('9980', 95, 193);

-- --------------------------------------------------------

--
-- Table structure for table `referee`
--

DROP TABLE IF EXISTS `referee`;
CREATE TABLE IF NOT EXISTS `referee` (
  `ID` varchar(10) NOT NULL,
  `Nationality` varchar(25) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `referee`
--

INSERT INTO `referee` (`ID`, `Nationality`) VALUES
('R239', 'Australian'),
('R534', 'Korean'),
('R547', 'Moroccan'),
('R876', 'Honduran'),
('R943', 'Chinese'),
('R987', 'Dutch');

-- --------------------------------------------------------

--
-- Table structure for table `responsibleof`
--

DROP TABLE IF EXISTS `responsibleof`;
CREATE TABLE IF NOT EXISTS `responsibleof` (
  `RefereeID` varchar(10) NOT NULL,
  `EventID` int(11) NOT NULL,
  PRIMARY KEY (`RefereeID`,`EventID`),
  KEY `EventID` (`EventID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `responsibleof`
--

INSERT INTO `responsibleof` (`RefereeID`, `EventID`) VALUES
('R943', 101),
('R534', 102),
('R239', 124),
('R876', 125),
('R547', 126),
('R987', 127);

-- --------------------------------------------------------

--
-- Table structure for table `sport`
--

DROP TABLE IF EXISTS `sport`;
CREATE TABLE IF NOT EXISTS `sport` (
  `SportID` int(11) NOT NULL,
  `SportName` varchar(50) DEFAULT NULL,
  `Category` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`SportID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `sport`
--

INSERT INTO `sport` (`SportID`, `SportName`, `Category`) VALUES
(1, '3x3 Basketball', 'Ball Sports'),
(2, 'Archery', 'Target Sports'),
(3, 'Artistic Gymnastics', 'Gymnastics Sports'),
(4, 'Artistic Swimming', 'Acquatic Sports'),
(5, 'Athletics', 'Athletic Sports'),
(6, 'Badminton', 'Racket Sports'),
(7, 'Baseball Softball', 'Ball Sports'),
(8, 'Basketball', 'Ball Sports'),
(9, 'Beach Volleyball', 'Ball Sports'),
(10, 'Bmx Freestyle', 'Cycle Sports'),
(11, 'Bmx Racing', 'Cycle Sports'),
(12, 'Boxing', 'Combat Sports'),
(13, 'Diving', 'Acquatic Sports'),
(14, 'Equestrian', 'Athletic Sports'),
(15, 'Fencing', 'Combat Sports'),
(16, 'Football', 'Ball Sports'),
(17, 'Golf', 'Ball Sports'),
(18, 'Handball', 'Ball Sports'),
(19, 'Hockey', 'Ball Sports'),
(20, 'Judo', 'Combat Sports'),
(21, 'Karate', 'Combat Sports'),
(22, 'Marathon Swimming', 'Acquatic Sports'),
(23, 'Modern Pentathlon', 'Athletic Sports'),
(24, 'Mountain Bike', 'Cycle Sports'),
(25, 'Rhythmic Gymnastics', 'Gymnastics Sports'),
(26, 'Road Cycling', 'Cycle Sports'),
(27, 'Rowing', 'Acquatic Sports'),
(28, 'Rugby', 'Ball Sports'),
(29, 'Sailing', 'Acquatic Sports'),
(30, 'Shooting', 'Target Sports'),
(31, 'Skateboarding', 'Athletic Sports'),
(32, 'Sport Climbing', 'Athletic Sports'),
(33, 'Surfing', 'Acquatic Sports'),
(34, 'Swimming', 'Acquatic Sports'),
(35, 'Table Tennis', 'Racket Sports'),
(36, 'Taekwondo', 'Combat Sports'),
(37, 'Tennis', 'Racket Sports'),
(38, 'Track Cycling', 'Cycle Sports'),
(39, 'Trampoline', 'Gymnastics Sports'),
(40, 'Triathlon', 'Athletic Sports'),
(41, 'Volleyball', 'Ball Sports'),
(42, 'Water Polo', 'Acquatic Sports'),
(43, 'Weightlifting', 'Strength Sports'),
(44, 'Wrestling', 'Combat Sports'),
(45, 'Alpine Skiing', 'Skiing Sports'),
(46, 'Biathlon', 'Ice Sports'),
(47, 'Bobsleigh', 'Ice Sports'),
(48, 'Cross-Country', 'Ice Sports'),
(49, 'Curling', 'Ice Sports'),
(50, 'Figure Skating', 'Skating Sports'),
(51, 'Freestyle Skiing', 'Skiing Sports'),
(52, 'Ice Hockey', 'Ice Sports'),
(53, 'Luge', 'Ice Sports'),
(54, 'Nordic Combined', 'Ice Sports'),
(55, 'Short Track Speed Skating', 'Skating Sports'),
(56, 'Skeleton', 'Ice Sports'),
(57, 'Ski Jumping', 'Skiing Sports'),
(58, 'Snowboard', 'Ice Sports'),
(59, 'Speed Skating', 'Skating Sports');

-- --------------------------------------------------------

--
-- Table structure for table `team`
--

DROP TABLE IF EXISTS `team`;
CREATE TABLE IF NOT EXISTS `team` (
  `NOC` char(3) NOT NULL,
  `TeamName` varchar(50) DEFAULT NULL,
  `ContinentalAssociation` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`NOC`),
  KEY `NOC` (`NOC`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `team`
--

INSERT INTO `team` (`NOC`, `TeamName`, `ContinentalAssociation`) VALUES
('AFG', 'Afghanistan', 'Asia'),
('ALB', 'Albania', 'Europe'),
('ALG', 'Algeria', 'Africa'),
('AND', 'Andorra', 'Europe'),
('ANG', 'Angola', 'Africa'),
('ANT', 'Antigua and Barbuda', 'Americas'),
('ARG', 'Argentina', 'Americas'),
('ARM', 'Armenia', 'Europe'),
('ARU', 'Aruba', 'Americas'),
('ASA', 'American Samoa', 'Oceania'),
('AUS', 'Australia', 'Oceania'),
('AUT', 'Austria', 'Europe'),
('AZE', 'Azerbaijan', 'Europe'),
('BAH', 'Bahamas', 'Americas'),
('BAN', 'Bangladesh', 'Asia'),
('BAR', 'Barbados', 'Americas'),
('BDI', 'Burundi', 'Africa'),
('BEL', 'Belgium', 'Europe'),
('BEN', 'Benin', 'Africa'),
('BER', 'Bermuda', 'Americas'),
('BHU', 'Bhutan', 'Asia'),
('BIH', 'Bosnia and Herzegovina', 'Europe'),
('BIZ', 'Belize', 'Americas'),
('BLR', 'Belarus', 'Europe'),
('BOL', 'Bolivia', 'Americas'),
('BOT', 'Botswana', 'Africa'),
('BRA', 'Brazil', 'Americas'),
('BRN', 'Bahrain', 'Asia'),
('BRU', 'Brunei Darussalam', 'Asia'),
('BUL', 'Bulgaria', 'Europe'),
('BUR', 'Burkina Faso', 'Africa'),
('CAF', 'Central African Republic', 'Africa'),
('CAM', 'Cambodia', 'Asia'),
('CAN', 'Canada', 'Americas'),
('CAY', 'Cayman Islands', 'Americas'),
('CGO', 'Congo', 'Africa'),
('CHA', 'Chad', 'Africa'),
('CHI', 'Chile', 'Americas'),
('CHN', 'People\'s Republic of China', 'Asia'),
('CIV', 'Côte d\'Ivoire', 'Africa'),
('CMR', 'Cameroon', 'Africa'),
('COD', 'Democratic Republic of the Congo', 'Africa'),
('COK', 'Cook Islands', 'Oceania'),
('COL', 'Colombia', 'Americas'),
('COM', 'Comoros', 'Africa'),
('CPV', 'Cape Verde', 'Africa'),
('CRC', 'Costa Rica', 'Americas'),
('CRO', 'Croatia', 'Europe'),
('CUB', 'Cuba', 'Americas'),
('CYP', 'Cyprus', 'Europe'),
('CZE', 'Czech Republic', 'Europe'),
('DEN', 'Denmark', 'Europe'),
('DJI', 'Djibouti', 'Africa'),
('DMA', 'Dominica', 'Americas'),
('DOM', 'Dominican Republic', 'Americas'),
('ECU', 'Ecuador', 'Americas'),
('EGY', 'Egypt', 'Africa'),
('ERI', 'Eritrea', 'Africa'),
('ESA', 'El Salvador', 'Americas'),
('ESP', 'Spain', 'Europe'),
('EST', 'Estonia', 'Europe'),
('ETH', 'Ethiopia', 'Africa'),
('FIJ', 'Fiji', 'Oceania'),
('FIN', 'Finland', 'Europe'),
('FRA', 'France', 'Europe'),
('FSM', 'Federated States of Micronesia', 'Oceania'),
('GAB', 'Gabon', 'Africa'),
('GAM', 'Gambia', 'Africa'),
('GBR', 'Great Britain', 'Europe'),
('GBS', 'Guinea-Bissau', 'Africa'),
('GEO', 'Georgia', 'Europe'),
('GEQ', 'Equatorial Guinea', 'Africa'),
('GER', 'Germany', 'Europe'),
('GHA', 'Ghana', 'Africa'),
('GRE', 'Greece', 'Europe'),
('GRN', 'Grenada', 'Americas'),
('GUA', 'Guatemala', 'Americas'),
('GUI', 'Guinea', 'Africa'),
('GUM', 'Guam', 'Oceania'),
('GUY', 'Guyana', 'Americas'),
('HAI', 'Haiti', 'Americas'),
('HKG', 'Hong Kong, China', 'Asia'),
('HON', 'Honduras', 'Americas'),
('HUN', 'Hungary', 'Europe'),
('INA', 'Indonesia', 'Asia'),
('IND', 'India', 'Asia'),
('IRI', 'Islamic Republic of Iran', 'Asia'),
('IRL', 'Ireland', 'Europe'),
('IRQ', 'Iraq', 'Asia'),
('ISL', 'Iceland', 'Europe'),
('ISR', 'Israel', 'Europe'),
('ISV', 'Virgin Islands, US', 'Americas'),
('ITA', 'Italy', 'Europe'),
('IVB', 'Virgin Islands, British', 'Americas'),
('JAM', 'Jamaica', 'Americas'),
('JOR', 'Jordan', 'Asia'),
('JPN', 'Japan', 'Asia'),
('KAZ', 'Kazakhstan', 'Asia'),
('KEN', 'Kenya', 'Africa'),
('KGZ', 'Kyrgyzstan', 'Asia'),
('KIR', 'Kiribati', 'Oceania'),
('KOR', 'Republic of Korea', 'Asia'),
('KOS', 'Kosovo', 'Europe'),
('KSA', 'Saudi Arabia', 'Asia'),
('KUW', 'Kuwait', 'Asia'),
('LAO', 'Lao People\'s Democratic Republic', 'Asia'),
('LAT', 'Latvia', 'Europe'),
('LBA', 'Libya', 'Africa'),
('LBN', 'Lebanon', 'Asia'),
('LBR', 'Liberia', 'Africa'),
('LCA', 'Saint Lucia', 'Americas'),
('LES', 'Lesotho', 'Africa'),
('LIE', 'Liechtenstein', 'Europe'),
('LTU', 'Lithuania', 'Europe'),
('LUX', 'Luxembourg', 'Europe'),
('MAD', 'Madagascar', 'Africa'),
('MAR', 'Morocco', 'Africa'),
('MAS', 'Malaysia', 'Asia'),
('MAW', 'Malawi', 'Africa'),
('MDA', 'Republic of Moldova', 'Europe'),
('MDV', 'Maldives', 'Asia'),
('MEX', 'Mexico', 'Americas'),
('MGL', 'Mongolia', 'Asia'),
('MHL', 'Marshall Islands', 'Oceania'),
('MKD', 'Republic of North Macedonia', 'Europe'),
('MLI', 'Mali', 'Africa'),
('MLT', 'Malta', 'Europe'),
('MNE', 'Montenegro', 'Europe'),
('MON', 'Monaco', 'Europe'),
('MOZ', 'Mozambique', 'Africa'),
('MRI', 'Mauritius', 'Africa'),
('MTN', 'Mauritania', 'Africa'),
('MYA', 'Myanmar', 'Asia'),
('NAM', 'Namibia', 'Africa'),
('NCA', 'Nicaragua', 'Americas'),
('NED', 'Netherlands', 'Europe'),
('NEP', 'Nepal', 'Asia'),
('NGR', 'Nigeria', 'Africa'),
('NIG', 'Niger', 'Africa'),
('NOR', 'Norway', 'Europe'),
('NRU', 'Nauru', 'Oceania'),
('NZL', 'New Zealand', 'Oceania'),
('OMA', 'Oman', 'Asia'),
('PAK', 'Pakistan', 'Asia'),
('PAN', 'Panama', 'Americas'),
('PAR', 'Paraguay', 'Americas'),
('PER', 'Peru', 'Americas'),
('PHI', 'Philippines', 'Asia'),
('PLE', 'Palestine', 'Asia'),
('PLW', 'Palau', 'Oceania'),
('PNG', 'Papua New Guinea', 'Oceania'),
('POL', 'Poland', 'Europe'),
('POR', 'Portugal', 'Europe'),
('PRK', 'Democratic People\'s Republic of Korea', 'Asia'),
('PUR', 'Puerto Rico', 'Americas'),
('QAT', 'Qatar', 'Asia'),
('ROU', 'Romania', 'Europe'),
('RSA', 'South Africa', 'Africa'),
('RUS', 'Russian Federation', 'Europe'),
('RWA', 'Rwanda', 'Africa'),
('SAM', 'Samoa', 'Oceania'),
('SEN', 'Senegal', 'Africa'),
('SEY', 'Seychelles', 'Africa'),
('SGP', 'Singapore', 'Asia'),
('SKN', 'Saint Kitts and Nevis', 'Americas'),
('SLE', 'Sierra Leone', 'Africa'),
('SLO', 'Slovenia', 'Europe'),
('SMR', 'San Marino', 'Europe'),
('SOL', 'Solomon Islands', 'Oceania'),
('SOM', 'Somalia', 'Africa'),
('SRB', 'Serbia', 'Europe'),
('SRI', 'Sri Lanka', 'Asia'),
('SSD', 'South Sudan', 'Africa'),
('STP', 'Sao Tome and Principe', 'Africa'),
('SUD', 'Sudan', 'Africa'),
('SUI', 'Switzerland', 'Europe'),
('SUR', 'Suriname', 'Americas'),
('SVK', 'Slovakia', 'Europe'),
('SWE', 'Sweden', 'Europe'),
('SWZ', 'Eswatini', 'Africa'),
('SYR', 'Syrian Arab Republic', 'Asia'),
('TAN', 'United Republic of Tanzania', 'Africa'),
('TGA', 'Tonga', 'Oceania'),
('THA', 'Thailand', 'Asia'),
('TJK', 'Tajikistan', 'Asia'),
('TKM', 'Turkmenistan', 'Asia'),
('TLS', 'Democratic Republic of Timor-Leste', 'Asia'),
('TOG', 'Togo', 'Africa'),
('TPE', 'Chinese Taipei', 'Asia'),
('TTO', 'Trinidad and Tobago', 'Americas'),
('TUN', 'Tunisia', 'Africa'),
('TUR', 'Turkey', 'Europe'),
('TUV', 'Tuvalu', 'Oceania'),
('UAE', 'United Arab Emirates', 'Asia'),
('UGA', 'Uganda', 'Africa'),
('UKR', 'Ukraine', 'Europe'),
('URU', 'Uruguay', 'Americas'),
('USA', 'United States of America', 'Americas'),
('UZB', 'Uzbekistan', 'Asia'),
('VAN', 'Vanuatu', 'Oceania'),
('VEN', 'Venezuela', 'Americas'),
('VIE', 'Vietnam', 'Asia'),
('VIN', 'St Vincent and the Grenadines', 'Americas'),
('YEM', 'Yemen', 'Asia'),
('ZAM', 'Zambia', 'Africa'),
('ZIM', 'Zimbabwe', 'Africa');

-- --------------------------------------------------------

--
-- Stand-in structure for view `team_winners`
-- (See below for the actual view)
--
DROP VIEW IF EXISTS `team_winners`;
CREATE TABLE IF NOT EXISTS `team_winners` (
`NOC` char(3)
,`Number of Medals` bigint(21)
);

-- --------------------------------------------------------

--
-- Stand-in structure for view `unvaccinated`
-- (See below for the actual view)
--
DROP VIEW IF EXISTS `unvaccinated`;
CREATE TABLE IF NOT EXISTS `unvaccinated` (
`FirstName` varchar(25)
,`LastName` varchar(25)
,`NOC` char(3)
);

-- --------------------------------------------------------

--
-- Table structure for table `upcomingathlete`
--

DROP TABLE IF EXISTS `upcomingathlete`;
CREATE TABLE IF NOT EXISTS `upcomingathlete` (
  `ID` varchar(10) NOT NULL,
  `VaccinationStatus` varchar(4) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `upcomingathlete`
--

INSERT INTO `upcomingathlete` (`ID`, `VaccinationStatus`) VALUES
('U29876', 'No'),
('U32345', 'No'),
('U67499', 'Yes'),
('U73572', 'No'),
('U74633', 'Yes'),
('U78346', 'No'),
('U95665', 'No');

-- --------------------------------------------------------

--
-- Table structure for table `wins`
--

DROP TABLE IF EXISTS `wins`;
CREATE TABLE IF NOT EXISTS `wins` (
  `AthleteID` varchar(10) NOT NULL,
  `EventID` int(11) NOT NULL,
  `Medal` varchar(8) DEFAULT NULL,
  PRIMARY KEY (`AthleteID`,`EventID`),
  KEY `EventID` (`EventID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `wins`
--

INSERT INTO `wins` (`AthleteID`, `EventID`, `Medal`) VALUES
('100430', 153, 'Gold'),
('100810', 172, 'Gold'),
('10121', 154, 'Silver'),
('101488', 101, 'Bronze'),
('101810', 107, 'Silver'),
('102321', 107, 'Silver'),
('102877', 158, 'Silver'),
('103686', 105, 'Bronze'),
('103838', 157, 'Silver'),
('104358', 173, 'Bronze'),
('10482', 164, 'Bronze'),
('10544', 169, 'Bronze'),
('10557', 164, 'Bronze'),
('107830', 157, 'Bronze'),
('108057', 154, 'Bronze'),
('1085', 163, 'Bronze'),
('109425', 168, 'Bronze'),
('109492', 152, 'Silver'),
('112753', 156, 'Silver'),
('113352', 110, 'Gold'),
('114347', 107, 'Bronze'),
('11495', 108, 'Gold'),
('115132', 107, 'Gold'),
('115287', 111, 'Gold'),
('11671', 107, 'Gold'),
('116754', 158, 'Bronze'),
('11799', 166, 'Silver'),
('1181', 133, 'Gold'),
('118778', 107, 'Gold'),
('120443', 108, 'Bronze'),
('12083', 163, 'Gold'),
('121237', 107, 'Silver'),
('121592', 162, 'Gold'),
('123357', 104, 'Silver'),
('123759', 157, 'Gold'),
('123934', 161, 'Gold'),
('124031', 103, 'Silver'),
('126096', 109, 'Gold'),
('126406', 173, 'Bronze'),
('126760', 172, 'Bronze'),
('126975', 106, 'Bronze'),
('128285', 152, 'Gold'),
('129913', 107, 'Gold'),
('130336', 170, 'Gold'),
('130402', 117, 'Gold'),
('131862', 165, 'Silver'),
('131981', 107, 'Silver'),
('132811', 169, 'Gold'),
('133245', 152, 'Bronze'),
('133869', 174, 'Gold'),
('1340', 164, 'Bronze'),
('135034', 159, 'Gold'),
('13755', 153, 'Silver'),
('13870', 164, 'Gold'),
('15005', 163, 'Gold'),
('15163', 164, 'Gold'),
('15264', 163, 'Gold'),
('16497', 154, 'Gold'),
('16499', 163, 'Bronze'),
('16500', 163, 'Bronze'),
('16977', 107, 'Bronze'),
('17038', 164, 'Silver'),
('17686', 164, 'Gold'),
('18029', 144, 'Gold'),
('19044', 107, 'Gold'),
('19205', 107, 'Bronze'),
('19760', 104, 'Gold'),
('19901', 107, 'Gold'),
('19949', 164, 'Gold'),
('20136', 163, 'Silver'),
('21357', 164, 'Silver'),
('22495', 154, 'Gold'),
('24028', 107, 'Silver'),
('24064', 107, 'Bronze'),
('24589', 154, 'Gold'),
('24765', 107, 'Bronze'),
('24767', 107, 'Bronze'),
('25317', 172, 'Bronze'),
('25419', 164, 'Silver'),
('25484', 163, 'Bronze'),
('25537', 157, 'Gold'),
('26823', 163, 'Silver'),
('26939', 164, 'Silver'),
('27357', 107, 'Gold'),
('27488', 106, 'Silver'),
('2750', 155, 'Silver'),
('28056', 166, 'Silver'),
('29282', 107, 'Silver'),
('2965', 164, 'Bronze'),
('30129', 163, 'Silver'),
('30526', 134, 'Silver'),
('3093', 142, 'Bronze'),
('31279', 158, 'Silver'),
('32384', 103, 'Bronze'),
('32468', 153, 'Gold'),
('32849', 160, 'Bronze'),
('34163', 113, 'Gold'),
('3491', 163, 'Silver'),
('35958', 160, 'Gold'),
('36558', 107, 'Gold'),
('3676', 159, 'Silver'),
('37014', 158, 'Silver'),
('3823', 115, 'Gold'),
('3889', 164, 'Bronze'),
('3920', 164, 'Bronze'),
('40243', 107, 'Silver'),
('4101', 155, 'Silver'),
('41427', 171, 'Gold'),
('42994', 107, 'Gold'),
('43026', 161, 'Bronze'),
('43865', 170, 'Gold'),
('4423', 146, 'Bronze'),
('4423', 147, 'Bronze'),
('4423', 159, 'Bronze'),
('44426', 170, 'Bronze'),
('4478', 164, 'Gold'),
('455', 120, 'Bronze'),
('455', 121, 'Silver'),
('46195', 173, 'Gold'),
('47140', 159, 'Bronze'),
('4742', 133, 'Gold'),
('47578', 105, 'Gold'),
('48194', 160, 'Bronze'),
('48325', 153, 'Bronze'),
('48761', 112, 'Silver'),
('48769', 112, 'Bronze'),
('49645', 160, 'Silver'),
('50695', 135, 'Bronze'),
('5144', 124, 'Silver'),
('5167', 125, 'Gold'),
('51727', 102, 'Bronze'),
('5198', 125, 'Silver'),
('52994', 136, 'Gold'),
('55457', 136, 'Silver'),
('56046', 107, 'Bronze'),
('5670', 128, 'Gold'),
('57803', 111, 'Silver'),
('59520', 104, 'Bronze'),
('5971', 107, 'Gold'),
('59848', 170, 'Bronze'),
('60110', 101, 'Silver'),
('60179', 167, 'Silver'),
('60274', 167, 'Bronze'),
('60372', 110, 'Silver'),
('6131', 128, 'Gold'),
('6158', 128, 'Silver'),
('61583', 158, 'Gold'),
('61686', 153, 'Bronze'),
('6201', 154, 'Gold'),
('63125', 110, 'Bronze'),
('63232', 114, 'Gold'),
('64194', 107, 'Bronze'),
('64487', 103, 'Gold'),
('64936', 116, 'Gold'),
('6554', 128, 'Bronze'),
('6561', 155, 'Bronze'),
('66446', 159, 'Gold'),
('67281', 158, 'Bronze'),
('6841', 162, 'Silver'),
('6887', 164, 'Silver'),
('69285', 109, 'Silver'),
('7022', 164, 'Silver'),
('7068', 160, 'Gold'),
('70711', 136, 'Bronze'),
('71921', 102, 'Silver'),
('72', 137, 'Gold'),
('7217', 128, 'Gold'),
('72870', 158, 'Gold'),
('74652', 105, 'Silver'),
('75588', 157, 'Silver'),
('75628', 158, 'Gold'),
('76947', 152, 'Gold'),
('77394', 107, 'Gold'),
('77930', 152, 'Bronze'),
('7835', 154, 'Silver'),
('78716', 101, 'Gold'),
('80039', 107, 'Bronze'),
('8050', 163, 'Silver'),
('8081', 154, 'Silver'),
('8082', 154, 'Silver'),
('81671', 107, 'Gold'),
('81972', 156, 'Bronze'),
('82357', 158, 'Gold'),
('8295', 157, 'Silver'),
('83715', 118, 'Bronze'),
('83735', 169, 'Bronze'),
('84943', 107, 'Silver'),
('85190', 158, 'Bronze'),
('85328', 157, 'Gold'),
('85808', 107, 'Silver'),
('86690', 158, 'Bronze'),
('89990', 158, 'Silver'),
('90442', 161, 'Silver'),
('90547', 107, 'Bronze'),
('90729', 107, 'Silver'),
('9142', 164, 'Gold'),
('91878', 107, 'Silver'),
('92710', 168, 'Gold'),
('9371', 151, 'Gold'),
('9394', 152, 'Silver'),
('94165', 107, 'Bronze'),
('9464', 106, 'Gold'),
('95071', 154, 'Bronze'),
('95153', 154, 'Bronze'),
('95601', 112, 'Gold'),
('96044', 118, 'Silver'),
('96044', 156, 'Gold'),
('96910', 111, 'Bronze'),
('97149', 160, 'Silver'),
('97884', 107, 'Silver'),
('98178', 107, 'Bronze'),
('9829', 109, 'Bronze'),
('98437', 108, 'Silver'),
('98437', 118, 'Gold'),
('98495', 102, 'Gold'),
('98778', 157, 'Gold'),
('98876', 158, 'Gold'),
('99641', 159, 'Silver');

-- --------------------------------------------------------

--
-- Structure for view `active_ath`
--
DROP TABLE IF EXISTS `active_ath`;

DROP VIEW IF EXISTS `active_ath`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `active_ath`  AS  select `p`.`FirstName` AS `FirstName`,`p`.`LastName` AS `LastName`,count(`pi`.`AthleteID`) AS `Nb of Participations` from ((`person` `p` join `participatesin` `pi`) join `events` `e`) where ((`pi`.`AthleteID` = `p`.`ID`) and (`e`.`OlympicYear` >= 2000) and (`pi`.`EventID` = `e`.`EventID`)) group by `pi`.`AthleteID` having (count(`pi`.`AthleteID`) > 1) order by count(`pi`.`AthleteID`) desc ;

-- --------------------------------------------------------

--
-- Structure for view `ath_info`
--
DROP TABLE IF EXISTS `ath_info`;

DROP VIEW IF EXISTS `ath_info`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `ath_info`  AS  select `p`.`ID` AS `ID`,`p`.`FirstName` AS `FirstName`,`p`.`LastName` AS `LastName`,`a`.`NOC` AS `NOC`,`t`.`TeamName` AS `TeamName`,`a`.`Sex` AS `Sex`,`a`.`YearOfBirth` AS `YearOfBirth`,`pa`.`Weight` AS `Weight`,`pa`.`Height` AS `Height` from (((`person` `p` join `athlete` `a`) join `previousathlete` `pa`) join `team` `t`) where ((`a`.`NOC` = `t`.`NOC`) and (`p`.`ID` = `a`.`ID`) and (`a`.`ID` = `pa`.`ID`)) ;

-- --------------------------------------------------------

--
-- Structure for view `ath_winners`
--
DROP TABLE IF EXISTS `ath_winners`;

DROP VIEW IF EXISTS `ath_winners`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `ath_winners`  AS  select `p`.`FirstName` AS `FirstName`,`p`.`LastName` AS `LastName`,`a`.`NOC` AS `NOC`,`e`.`EventName` AS `EventName`,`e`.`OlympicYear` AS `OlympicYear`,`w`.`Medal` AS `Medal` from ((((`person` `p` join `athlete` `a`) join `previousathlete` `pa`) join `wins` `w`) join `events` `e`) where ((`p`.`ID` = `a`.`ID`) and (`a`.`ID` = `pa`.`ID`) and (`a`.`ID` = `w`.`AthleteID`) and (`e`.`EventID` = `w`.`EventID`)) ;

-- --------------------------------------------------------

--
-- Structure for view `olympics_info`
--
DROP TABLE IF EXISTS `olympics_info`;

DROP VIEW IF EXISTS `olympics_info`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `olympics_info`  AS  select `o`.`City` AS `City`,`hc`.`CountryName` AS `CountryName`,`o`.`Year` AS `Year`,`o`.`Season` AS `Season`,`o`.`StartDate` AS `StartDate`,`o`.`EndDate` AS `EndDate` from (`olympics` `o` join `hostcountry` `hc`) where (`o`.`CountryID` = `hc`.`CountryID`) ;

-- --------------------------------------------------------

--
-- Structure for view `team_winners`
--
DROP TABLE IF EXISTS `team_winners`;

DROP VIEW IF EXISTS `team_winners`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `team_winners`  AS  select `t`.`NOC` AS `NOC`,count(`w`.`Medal`) AS `Number of Medals` from (((`team` `t` join `athlete` `a`) join `wins` `w`) join `events` `e`) where ((`a`.`NOC` = `t`.`NOC`) and (`e`.`OlympicYear` >= 2000) and (`a`.`ID` = `w`.`AthleteID`) and (`e`.`EventID` = `w`.`EventID`)) group by `t`.`NOC` order by count(`w`.`Medal`) desc ;

-- --------------------------------------------------------

--
-- Structure for view `unvaccinated`
--
DROP TABLE IF EXISTS `unvaccinated`;

DROP VIEW IF EXISTS `unvaccinated`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `unvaccinated`  AS  select `p`.`FirstName` AS `FirstName`,`p`.`LastName` AS `LastName`,`a`.`NOC` AS `NOC` from ((`person` `p` join `athlete` `a`) join `upcomingathlete` `ua`) where ((`p`.`ID` = `a`.`ID`) and (`a`.`ID` = `ua`.`ID`) and (`ua`.`VaccinationStatus` = 'No')) ;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `athlete`
--
ALTER TABLE `athlete`
  ADD CONSTRAINT `athlete_ibfk_1` FOREIGN KEY (`ID`) REFERENCES `person` (`ID`) ON UPDATE CASCADE,
  ADD CONSTRAINT `athlete_ibfk_2` FOREIGN KEY (`NOC`) REFERENCES `team` (`NOC`) ON UPDATE CASCADE;

--
-- Constraints for table `events`
--
ALTER TABLE `events`
  ADD CONSTRAINT `events_ibfk_1` FOREIGN KEY (`SportID`) REFERENCES `sport` (`SportID`) ON UPDATE CASCADE,
  ADD CONSTRAINT `events_ibfk_2` FOREIGN KEY (`OlympicYear`) REFERENCES `olympics` (`Year`) ON UPDATE CASCADE;

--
-- Constraints for table `olympics`
--
ALTER TABLE `olympics`
  ADD CONSTRAINT `olympics_ibfk_1` FOREIGN KEY (`CountryID`) REFERENCES `hostcountry` (`CountryID`) ON UPDATE CASCADE;

--
-- Constraints for table `participatesin`
--
ALTER TABLE `participatesin`
  ADD CONSTRAINT `participatesin_ibfk_2` FOREIGN KEY (`EventID`) REFERENCES `events` (`EventID`) ON UPDATE CASCADE,
  ADD CONSTRAINT `participatesin_ibfk_3` FOREIGN KEY (`AthleteID`) REFERENCES `previousathlete` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `previousathlete`
--
ALTER TABLE `previousathlete`
  ADD CONSTRAINT `previousathlete_ibfk_1` FOREIGN KEY (`ID`) REFERENCES `athlete` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `referee`
--
ALTER TABLE `referee`
  ADD CONSTRAINT `referee_ibfk_1` FOREIGN KEY (`ID`) REFERENCES `person` (`ID`) ON UPDATE CASCADE;

--
-- Constraints for table `responsibleof`
--
ALTER TABLE `responsibleof`
  ADD CONSTRAINT `responsibleof_ibfk_1` FOREIGN KEY (`EventID`) REFERENCES `events` (`EventID`),
  ADD CONSTRAINT `responsibleof_ibfk_2` FOREIGN KEY (`RefereeID`) REFERENCES `referee` (`ID`) ON UPDATE CASCADE;

--
-- Constraints for table `upcomingathlete`
--
ALTER TABLE `upcomingathlete`
  ADD CONSTRAINT `upcomingathlete_ibfk_1` FOREIGN KEY (`ID`) REFERENCES `athlete` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `wins`
--
ALTER TABLE `wins`
  ADD CONSTRAINT `wins_ibfk_2` FOREIGN KEY (`EventID`) REFERENCES `events` (`EventID`) ON UPDATE CASCADE,
  ADD CONSTRAINT `wins_ibfk_3` FOREIGN KEY (`AthleteID`) REFERENCES `previousathlete` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
